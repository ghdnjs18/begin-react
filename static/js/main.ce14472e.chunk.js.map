{"version":3,"sources":["Word.js","App.js","reportWebVitals.js","index.js"],"names":["Word","seq","keyword","link","hanja","word_class","meaning","className","href","App","props","console","log","state","loading","words","fetch","then","res","json","result","setState","this","id","type","value","placeholder","map","w","_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAiBeA,MAbf,YAAkE,IAAlDC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,QACnD,OACI,mCACI,qBAAKC,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBL,EAAQ,8BAAMD,IAAU,mBAAGM,UAAU,QAAb,SAAsBH,IAArE,IAAgF,mBAAGI,KAAML,EAAT,0CAChF,oBAAGI,UAAU,cAAb,UAA2B,+BAAOF,IAAlC,IAAsDC,aCoE3DG,E,kDAxEb,WAAYC,GAAQ,IAAD,6BACjBC,QAAQC,IAAI,gBACZ,cAAMF,IACDG,MAAQ,CACXC,SAAS,EACTC,MAAO,IALQ,E,qDAUnB,WAAqB,IAAD,OAIlBJ,QAAQC,IAAI,SAEZI,MAHiB,0DAIhBC,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACL,IAAOL,EAASK,EAATL,MACPJ,QAAQC,IAAIG,GACZ,EAAKM,SAAS,CAACP,SAAS,EAAOC,e,gCAInC,WACEJ,QAAQC,IAAI,Y,qCAGd,WACED,QAAQC,IAAI,a,oBAGd,WACED,QAAQC,IAAI,UACZ,MAAyBU,KAAKT,MAAvBC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAEhB,OAAID,EAEA,8BACE,+CAKF,gCACE,sBAAKS,GAAG,aAAR,UACE,uBAAOC,KAAK,OAAOD,GAAG,SAASE,MAAM,GAAGC,YAAY,gDACpD,uBAAOF,KAAK,SAASD,GAAG,SAASE,MAAM,oBAItCV,EAAMY,KAAI,SAAAC,GACT,OACE,cAAC,EAAD,CAEE3B,IAAK2B,EAAE3B,IACPC,QAAS0B,EAAE1B,QACXC,KAAMyB,EAAEzB,KACRC,MAAOwB,EAAExB,MACTC,WAAYuB,EAAEvB,WACdC,QAASsB,EAAEtB,SANNsB,EAAEC,e,GAxDPC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce14472e.chunk.js","sourcesContent":["import './Word.css';\r\n\r\nimport React from \"react\"\r\n\r\nfunction Word ({seq, keyword, link, hanja, word_class, meaning}) {\r\n    return (\r\n        <>\r\n            <div className=\"resultInner\">\r\n                <div className=\"item move-up\">\r\n                    <div className=\"word\">{keyword}<sup>{seq}</sup><p className=\"hanja\">{hanja}</p> <a href={link}>더 보기  &raquo;</a></div>\r\n                    <p className=\"description\"><span>{word_class}</span> {meaning}</p>\r\n                </div> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Word;","import './App.css';\n\nimport React, { Component } from 'react';\nimport Word from './Word';\n\nclass App extends Component{\n  constructor(props) {\n    console.log('constructor')\n    super(props)\n    this.state = {\n      loading: true,\n      words: []\n    }\n  }\n\n  // 컴포넌트가 생성되었을때 호출이 된다\n  componentDidMount() {\n    // const BASE_URL = 'https://yts.mx/api/v2/list_movies.json?limit=12'\n    // const BASE_URL = 'localhost:5000/api/words'\n    const BASE_URL = 'https://dictionary-search-hoho.herokuapp.com/api/words'\n    console.log('mount')\n    // 서버에서 데이터 가져오기 (movie)\n    fetch(BASE_URL) \n    .then( res => res.json()) \n    .then( result => { \n      const {words} = result \n      console.log(words) \n      this.setState({loading: false, words}) \n    })\n  }\n  // 컴포넌트가 생성되었을때 호출이 된다\n  componentDidUpdate() {\n    console.log('update')\n  }\n  // 컴포넌트가 생성되었을때 호출이 된다\n  componentDidWillUnmount() {\n    console.log('unmount')\n  }\n\n  render() {\n    console.log('render')\n    const {loading, words} = this.state\n    // 로딩\n    if (loading) {\n      return (\n        <div>\n          <h1>Loading....</h1>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div id=\"search-box\">\n            <input type=\"text\" id=\"search\" value=\"\" placeholder=\"단어를 적으시오\"></input>\n            <input type=\"submit\" id=\"submit\" value=\"검색\"></input>\n        </div>\n          {/* 데이터를 참조하고 건들지는 않는다. */}\n          {/* map:데이터 순회 filter:삭제 검색 reduce: */}\n            {words.map(w => { \n              return (\n                <Word\n                  key={w._id}\n                  seq={w.seq}\n                  keyword={w.keyword}\n                  link={w.link}\n                  hanja={w.hanja}\n                  word_class={w.word_class}\n                  meaning={w.meaning}\n                ></Word>\n                )\n              })}\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}